version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    hostname: sqlserver
    container_name: reliablestore-benchmark-sqlserver
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD:-YourStrong@Passw0rd}
      - MSSQL_PID=Developer
      - MSSQL_IP_ADDRESS=0.0.0.0
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${SA_PASSWORD:-YourStrong@Passw0rd}", "-C", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - reliablestore-benchmark

  init-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - SA_PASSWORD=${SA_PASSWORD:-YourStrong@Passw0rd}
    entrypoint: >
      bash -c "
        echo 'Waiting for SQL Server to be ready...';
        until /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P \"$$SA_PASSWORD\" -C -Q \"SELECT 1\" > /dev/null 2>&1; do
          echo 'Waiting for SQL Server...';
          sleep 1;
        done;
        echo 'Creating database if not exists...';
        /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P \"$$SA_PASSWORD\" -C -Q \"IF DB_ID(N'ReliableStoreBenchmark') IS NULL CREATE DATABASE [ReliableStoreBenchmark];\";
        echo 'Database setup complete';
      "
    networks:
      - reliablestore-benchmark

networks:
  reliablestore-benchmark:
    name: reliablestore-benchmark
    driver: bridge