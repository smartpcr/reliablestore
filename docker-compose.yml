version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - reliablestore-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong@Passw0rd", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  catalog-service:
    build:
      context: .
      dockerfile: src/poc/CatalogService/Dockerfile
    ports:
      - "9001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=ReliableStore;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
    volumes:
      - ./data/catalog:/app/data
    networks:
      - reliablestore-network
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped

  customer-service:
    build:
      context: .
      dockerfile: src/poc/CustomerService/Dockerfile
    ports:
      - "9002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=ReliableStore;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
    volumes:
      - ./data/customer:/app/data
    networks:
      - reliablestore-network
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped

  order-service:
    build:
      context: .
      dockerfile: src/poc/OrderService/Dockerfile
    ports:
      - "9003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=ReliableStore;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
    volumes:
      - ./data/order:/app/data
      - ./data/shared:/app/shared  # Shared data for cross-service coordination
    networks:
      - reliablestore-network
    depends_on:
      sqlserver:
        condition: service_healthy
      catalog-service:
        condition: service_started
      customer-service:
        condition: service_started
      payment-service:
        condition: service_started
      shipping-service:
        condition: service_started
    restart: unless-stopped

  payment-service:
    build:
      context: .
      dockerfile: src/poc/PaymentService/Dockerfile
    ports:
      - "9004:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=ReliableStore;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
    volumes:
      - ./data/payment:/app/data
    networks:
      - reliablestore-network
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped

  shipping-service:
    build:
      context: .
      dockerfile: src/poc/ShippingService/Dockerfile
    ports:
      - "9005:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__SqlServer=Server=sqlserver;Database=ReliableStore;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
    volumes:
      - ./data/shipping:/app/data
    networks:
      - reliablestore-network
    depends_on:
      sqlserver:
        condition: service_healthy
    restart: unless-stopped

networks:
  reliablestore-network:
    driver: bridge

volumes:
  sqlserver-data:
  catalog-data:
  customer-data:
  order-data:
  payment-data:
  shipping-data:
  shared-data: